1.The goal of React Fiber is to increase its suitability for areas like animation, layout, and gestures. Its headline feature is incremental rendering: the ability to split rendering work into chunks and spread it out over multiple frames.

2.Other key features include the ability to pause, abort, or reuse work as new updates come in; the ability to assign priority to different types of updates; and new concurrency primitives.

3.What is reconciliation?
reconciliation
The algorithm React uses to diff one tree with another to determine which parts need to be changed.

4.update
A change in the data used to render a React app. Usually the result of `setState`. Eventually results in a re-render.

5.Hydration in React refers to the process of attaching event handlers and other client-side functionality to a server-rendered HTML content. It's a critical step in the process of Server-Side Rendering (SSR) and Rehydration.

import ReactDOM from 'react-dom';
import App from './App';

// Hydrate the root component
ReactDOM.hydrate(<App />, document.getElementById('root'));

6.Different component types are assumed to generate substantially different trees. React will not attempt to diff them, but rather replace the old tree completely.
Diffing of lists is performed using keys. Keys should be "stable, predictable, and unique."

7.In a UI, it's not necessary for every update to be applied immediately; in fact, doing so can be wasteful, causing frames to drop and degrading the user experience.
Different types of updates have different priorities â€” an animation update needs to complete more quickly than, say, an update from a data store.
A push-based approach requires the app (you, the programmer) to decide how to schedule work. A pull-based approach allows the framework (React) to be smart and make those decisions for you.

8.


